// frontend/src/utils/axiosInstance.js
import axios from 'axios';

// –°–æ–∑–¥–∞—ë–º –æ–±—â–∏–π –∏–Ω—Å—Ç–∞–Ω—Å —Å –±–∞–∑–æ–≤—ã–º URL
const api = axios.create({
  // baseURL: '/api', –°–ï–†–í–ï–†!!!
  baseURL: 'http://localhost:5000/api',

});

// ‚¨ÜÔ∏è –í –∫–∞–∂–¥—ã–π –∑–∞–ø—Ä–æ—Å –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ–º access‚Äë—Ç–æ–∫–µ–Ω, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
api.interceptors.request.use(config => {
  const token = localStorage.getItem('accessToken');
  if (token) config.headers['Authorization'] = `Bearer ${token}`;
  return config;
});

// ‚¨áÔ∏è –û—Ç–≤–µ—Ç—ã: –∞–≤—Ç–æ‚Äërefresh —Ç–æ–∫–µ–Ω–∞, –Ω–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–∞–º /auth/login
api.interceptors.response.use(
  res => res,
  async err => {
    const orig   = err.config;
    const status = err.response?.status;

    // üëâ –ù–µ —Ç—Ä–æ–≥–∞–µ–º –æ—à–∏–±–∫–∏ —Å–∞–º–æ–≥–æ –ª–æ–≥–∏–Ω–∞, —á—Ç–æ–±—ã –Ω–µ —Å—Ç–∏—Ä–∞—Ç—å email
    const isAuthLogin = orig?.url?.includes('/auth/login');

    if ((status === 401 || status === 403) && !orig._retry && !isAuthLogin) {
      orig._retry = true;

      const refreshToken = localStorage.getItem('refreshToken');
      if (!refreshToken) {
        // –Ω–µ—Ç refresh ‚Üí –≤—ã—Ö–æ–¥–∏–º –≤ –ª–æ–≥–∏–Ω
        localStorage.clear();
        window.location.href = '/login';
        return Promise.reject(err);
      }

      try {
        // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–≤—ã–π access
        const { data } = await api.post('/auth/token', { refreshToken });
        localStorage.setItem('accessToken', data.accessToken);

        // –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ–º –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∏ –ø–æ–≤—Ç–æ—Ä—è–µ–º
        orig.headers['Authorization'] = `Bearer ${data.accessToken}`;
        return api(orig);
      } catch {
        // refresh —Ç–æ–∂–µ –Ω–µ –ø—Ä–æ–∫–∞—Ç–∏–ª ‚Üí –ø–æ–ª–Ω—ã–π logout
        localStorage.clear();
        window.location.href = '/login';
        return Promise.reject(err);
      }
    }

    // –í—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –æ—à–∏–±–∫–∏ –ø—Ä–æ–∫–∏–¥—ã–≤–∞–µ–º –∫–∞–∫ –µ—Å—Ç—å
    return Promise.reject(err);
  }
);

export default api;
